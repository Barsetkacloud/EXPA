// Открыть в папке с проектом Git Bash, правой кнопкой наход€сь в папке проекта

// При создание репозитори€ на сайте GitHub не создавать файл Readme.md, тольк при создании

//  это команда создает свою папку в папке проекта -> .git
git init


// проверка статуса, показывает файлы которые под системой контрол€
 git status ->
 git status --untracked-files=normal // показ файлов в папке
 git status --untracked-files=all
 git status --untracked-files=no

// переход в папку "bin"
cd bin

// создаем пользовател€ глобального с именем и почтой
git config --global user.name "nikeweke"
git config --global user.email jxammet@gmail.com

// показать настройки
git config --list

/*  Игнорирование файлов : -- создаем файл без расширени€ с названием ".gitignore"
                          -- в ней пишем в файле  .gitignore -> */

																  # папка лог и файле в ней игноритьс€
																  logs/

																  # файлы с расширением .txt игнор€тьс€ в папке docs
																  docs/*.txt


// Добавить все файлы проекта под контроль Git
git add .
git add filename

// удаление файла из под контроля Git
git rm --cached filename

//  Коммит файлов и индексирование их(»нициализаци€ файлов проекта)
git commit -a -m"init"

// Файлы которые не проиндексированные не могут быть коммит сделать
// если файл был изменен и его надо потом закомитить то, индиксируем
git add "*.php"
git add .

// Закомитить файлы которы были изменены и проиндексированы
git commit -m"commit"

// Получить файл из репозитори€ или откатить локальный файл до файла как на репозиторие
git checkout -- filename

// Добавить удаленный репозиторий дл€ проекта(origin - это название)
git remote add origin https://github.com/Nikeweke/Portal_News.git

// Посмотреть доступные репизитории удаленные
git remote
git remote -v

// Закачать файлы на GitHGub в репозиторий
git push -u origin master // один раз так, так как здесь ключ: -u
git push // второй раз так можно





// ************************************************ ПОСЛЕДОВАТЕЛЬНОСТЬ РАБОТЫ

1. пописал в файлах херни
2. проверил что там и где понаписовал : git status
3. проиндексировал херню : git add .
4.делаем коммит херни : git commit -m"commit" - ("commit" - это просто комментарий будет виден на сайте в истории)
5. делаем репозиторий на Github без Readme.md, и пишем git remote add name https:// ... .git
5.git push (или git push -u origin master - один раз)

// ************************************************ ПОСЛЕДОВАТЕЛЬНОСТЬ РАБОТЫ
